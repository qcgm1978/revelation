name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
# 注释掉build-web作业
#  build-web:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Use Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: '20'
#      - name: Install dependencies
#        run: npm ci
#      - name: Build web app
#        run: npm run build
#      - name: Upload web build artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: web-build
#          path: dist

  build-android:
    runs-on: ubuntu-latest
#    needs: build-web  # 移除对build-web的依赖
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
#      - name: Download web build artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: web-build
#          path: dist
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Install Android SDK Command-line Tools
        uses: android-actions/setup-android@v3
      - name: Install Capacitor dependencies
        run: npm install
      - name: Build web app before sync
        run: npm run build
      - name: Sync Capacitor with Android
        run: npx cap sync android
      - name: Build Android APK
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew assembleDebug
      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk

  build-electron:
    runs-on: ${{ matrix.os }}
#    needs: build-web  # 移除对build-web的依赖
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
#      - name: Download web build artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: web-build
#          path: dist
      - name: Install dependencies
        run: npm install
      - name: Build web app before electron build
        run: npm run build
      - name: Build Electron app
        if: matrix.os == 'ubuntu-latest'
        run: npm run electron:build:linux
      - name: Build Electron app
        if: matrix.os == 'windows-latest'
        run: npm run electron:build:win
      - name: Build Electron app
        if: matrix.os == 'macos-latest'
        run: npm run electron:build:mac
      - name: Upload Electron build (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: electron-linux
          path: dist-electron/*.AppImage
      - name: Upload Electron build (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: electron-windows
          path: dist-electron/*.exe
      - name: Upload Electron build (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: electron-macos
          path: dist-electron/*.dmg