name: Android

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17 for Android SDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Install Android SDK Command-line Tools
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: '9477386'
      
      - name: Install dependencies
        run: npm install
      - name: Build web app before sync
        run: npm run build
      - name: Sync Capacitor with Android
        run: npx cap sync android
      - name: Build Android APK
        run: |
          cd android
          chmod +x ./gradlew
          export JAVA_HOME=${JAVA_HOME}
          export PATH=${JAVA_HOME}/bin:${PATH}
          ./gradlew assembleDebug \
            --stacktrace
      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk

# 注释掉build-electron作业
#  build-electron:
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [ubuntu-latest, windows-latest, macos-latest]
#    steps:
#      - uses: actions/checkout@v4
#      - name: Use Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: '20'
#      - name: Install dependencies
#        run: npm install
#      - name: Build web app before electron build
#        run: npm run build
#      - name: Build Electron app
#        if: matrix.os == 'ubuntu-latest'
#        run: npm run electron:build:linux
#      - name: Build Electron app
#        if: matrix.os == 'windows-latest'
#        run: npm run electron:build:win
#      - name: Build Electron app
#        if: matrix.os == 'macos-latest'
#        run: npm run electron:build:mac
#      - name: Upload Electron build (Linux)
#        if: matrix.os == 'ubuntu-latest'
#        uses: actions/upload-artifact@v4
#        with:
#          name: electron-linux
#          path: dist-electron/*.AppImage
#      - name: Upload Electron build (Windows)
#        if: matrix.os == 'windows-latest'
#        uses: actions/upload-artifact@v4
#        with:
#          name: electron-windows
#          path: dist-electron/*.exe
#      - name: Upload Electron build (macOS)
#        if: matrix.os == 'macos-latest'
#        uses: actions/upload-artifact@v4
#        with:
#          name: electron-macos
#          path: dist-electron/*.dmg