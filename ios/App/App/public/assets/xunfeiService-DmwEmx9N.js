import{g as S}from"./index-fn7NKjN7.js";class A{constructor(r,s,n,o){Object.defineProperty(this,"APIKey",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"APISecret",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"host",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"path",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"gpt_url",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"prompt",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.APIKey=r,this.APISecret=s;const a=new URL(n);this.host=a.host,this.path=a.pathname+a.search,this.gpt_url=n,this.prompt=o}async create_url(){const r=new Date,s=this.format_date_time(r),n=`host: ${this.host}
date: ${s}
GET ${this.path} HTTP/1.1`,o=await this.generateHmac(this.APISecret,n);if(!o)return null;const a=btoa(String.fromCharCode(...new Uint8Array(o))),e=`api_key="${this.APIKey}", algorithm="hmac-sha256", headers="host date request-line", signature="${a}"`,d={authorization:btoa(e),date:s,host:this.host},c=new URLSearchParams(d).toString();return`${this.gpt_url}?${c}`}async generateHmac(r,s){try{const n=new TextEncoder,o=n.encode(r),a=n.encode(s),e=await window.crypto.subtle.importKey("raw",o,{name:"HMAC",hash:"SHA-256"},!1,["sign"]);return await window.crypto.subtle.sign("HMAC",e,a)}catch(n){return console.error("Error generating HMAC:",n),null}}format_date_time(r){return r.toUTCString()}}function k(i){console.log("### error:",i)}function v(i,r){console.log("### closed ###")}function U(i,r){const s=JSON.stringify({payload:{message:{text:[{role:"system",content:""},{role:"user",content:r||"请在此处输入你的问题!!!"}]}},parameter:{chat:{max_tokens:32768,domain:"x1",top_k:6,temperature:1.2,tools:[{web_search:{search_mode:"normal",enable:!1},type:"web_search"}]}},header:{app_id:"7802f8ba"}});i.send(s)}async function N(i,r,s,n){try{const o=new A(r,i,s,n),a=await o.create_url();if(!a)return null;const e=new WebSocket(a);let h=null;e.onopen=()=>U(e,o.prompt),e.onerror=k,e.onclose=t=>v(t.code,t.reason);const{readable:d,writable:c}=new TransformStream,f=c.getWriter(),b=new TextEncoder;return e.onmessage=t=>{var l,u,w,y,g,m,E;try{const I=t.data,_=JSON.parse(I);if((y=(w=(u=(l=_.payload)==null?void 0:l.choices)==null?void 0:u.text)==null?void 0:w[0])!=null&&y.content){const P=_.payload.choices.text[0].content;f.write(b.encode(`data: ${JSON.stringify({choices:[{delta:{content:P}}]})}

`))}((g=_.header)==null?void 0:g.code)!==0&&(f.close(),e.close()),((E=(m=_.payload)==null?void 0:m.choices)==null?void 0:E.status)===2&&(f.write(b.encode(`data: [DONE]

`)),f.close(),e.close())}catch(I){console.error("Error processing message:",I)}},e.onerror=t=>{f.close();let l="Unknown WebSocket error";if(t instanceof Error)l=t.message;else if(typeof t=="object"&&t!==null){const u=t,w={type:u.type||"unknown",target:u.target?"WebSocket connection":"unknown target",readyState:e.readyState,url:e.url};l=JSON.stringify(w)}else l=String(t);h=new Error(`WebSocket error: ${l}`)},await new Promise((t,l)=>{const u=setInterval(()=>{h&&(clearInterval(u),l(h)),e.readyState===WebSocket.OPEN&&(clearInterval(u),t())},50)}),d.getReader()}catch(o){throw console.error("Error in request_xunfei:",o),o}}var p={};async function*T(i,r="zh",s,n){var o,a,e;try{const h=S(i,r,s,n),d=await N(localStorage.getItem("XUNFEI_API_KEY")||typeof process<"u"&&(p==null?void 0:p.VITE_XUNFEI_API_KEY)||"",localStorage.getItem("XUNFEI_API_SECRET")||typeof process<"u"&&(p==null?void 0:p.VITE_XUNFEI_API_SECRET)||"","wss://spark-api.xf-yun.com/v1/x1",h);let c="";if(d){const b=new TextDecoder;let t="";try{for(;;){const{done:l,value:u}=await d.read();if(l)break;t+=b.decode(u,{stream:!0});const w=t.split(`
`);t=w.pop()||"";for(const y of w)if(y.startsWith("data: ")){const g=y.slice(6);if(g==="[DONE]"){c&&(yield c,c="");return}try{const m=JSON.parse(g);(e=(a=(o=m.choices)==null?void 0:o[0])==null?void 0:a.delta)!=null&&e.content&&(c+=m.choices[0].delta.content,yield c,c="",await new Promise(E=>setTimeout(E,30)))}catch{}}}}finally{c&&(yield c),d.releaseLock()}return}throw yield`Error: ${r==="zh"?`无法为"${i}"生成内容: `:`Could not generate content for "${i}": `}无法连接到讯飞API`,new Error("无法连接到讯飞API")}catch{const d=r==="zh"?"请配置有效的XUNFEI_API_KEY和XUNFEI_API_SECRET":"Please configure valid XUNFEI_API_KEY and XUNFEI_API_SECRET";throw new Error(d)}}export{T as streamDefinition};
